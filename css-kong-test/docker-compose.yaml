name: css-kong-test
services:
  kong-database:
    container_name: kong-database
    image: postgres:${VERSION_POSTGRES}
    platform: ${PLATFORM}
    user: postgres
    networks:
      - development-network
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@127.0.0.1:5432/${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
  kong-migration:
    image: reg.telecomjs.com/eda-css/kong:${VERSION_KONG}
    platform: ${PLATFORM}
    container_name: kong-migration
    networks:
      - development-network
    depends_on:
      kong-database:
        condition: service_healthy
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
      - KONG_PG_USER=${POSTGRES_USER}
      - KONG_PG_PASSWORD=${POSTGRES_PASSWORD}
      - KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl
    command: kong migrations bootstrap
  kong:
    container_name: kong
    image: reg.telecomjs.com/eda-css/kong:${VERSION_KONG}
    platform: ${PLATFORM}
    networks:
      - development-network
    ports:
      - "8000:8000"
      - "8001:8001"
      - "8443:8443"
      - "8444:8444"
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
      - KONG_PG_USER=${POSTGRES_USER}
      - KONG_PG_PASSWORD=${POSTGRES_PASSWORD}
      - KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl
    depends_on:
      kong-database:
        condition: service_healthy
      kong-migration:
        condition: service_completed_successfully
  konga:
    container_name: konga
    image: reg.telecomjs.com/eda-css/konga:${VERSION_KONGA}
    platform: ${PLATFORM}
    networks:
      - development-network
    ports:
      - "1337:1337"
    environment:
      - NODE_ENV=production
      - TOKEN_SECRET=123456
      - BASE_URL=/konga/
    depends_on:
      - kong

  css-sample-websocket:
    container_name: css-sample-websocket
    image: reg.telecomjs.com/eda-css/css-sample-websocket:1.0
    platform: ${PLATFORM}
    networks:
      - development-network
    ports:
      - "8080:8080"

  nginx:
    container_name: nginx
    image: nginx:1.25
    platform: ${PLATFORM}
    networks:
      - development-network
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - kong
      - konga
      - css-sample-websocket
  
  grafana:
    container_name: grafana
    image: grafana/grafana-enterprise:10.3.4
    platform: ${PLATFORM}
    environment:
      - GF_SERVER_ROOT_URL=http://0.0.0.0:3000/grafana
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
    networks:
      - development-network
    ports:
      - "3000:3000"


networks:
  development-network:
    external: true