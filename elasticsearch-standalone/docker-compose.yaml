version: "3.9"
name: elasticsearch-standalone
services:
  elasticsearch-standalone-setup:
    container_name: elasticsearch-standalone-setup
    image: elasticsearch:${VERSION_ELASTICSEARCH}
    volumes:
      - elasticsearch-standalone-certs:/usr/share/elasticsearch/config/certs
    user: "0"
    command: >
      bash -c '
        if [ x${ELASTIC_PASSWORD} == x ]; then
          echo "Set the ELASTIC_PASSWORD environment variable in the .env file";
          exit 1;
        elif [ x${KIBANA_PASSWORD} == x ]; then
          echo "Set the KIBANA_PASSWORD environment variable in the .env file";
          exit 1;
        fi;
        if [ ! -f config/certs/ca.zip ]; then
          echo "Creating CA";
          bin/elasticsearch-certutil ca --silent --pem -out config/certs/ca.zip;
          unzip config/certs/ca.zip -d config/certs;
        fi;
        if [ ! -f config/certs/certs.zip ]; then
          echo "Creating certs";
          echo -ne \
          "instances:\n"\
          "  - name: elasticsearch-standalone\n"\
          "    dns:\n"\
          "      - elasticsearch-standalone\n"\
          "      - localhost\n"\
          "    ip:\n"\
          "      - 127.0.0.1\n"\
          > config/certs/instances.yml;
          bin/elasticsearch-certutil cert --silent --pem -out config/certs/certs.zip --in config/certs/instances.yml --ca-cert config/certs/ca/ca.crt --ca-key config/certs/ca/ca.key;
          unzip config/certs/certs.zip -d config/certs;
        fi;
        echo "Setting file permissions"
        chown -R root:root config/certs;
        find . -type d -exec chmod 750 \{\} \;;
        find . -type f -exec chmod 640 \{\} \;;
        echo "Waiting for Elasticsearch availability";
        until curl -s --cacert config/certs/ca/ca.crt https://elasticsearch-standalone:9200 | grep -q "missing authentication credentials"; do sleep 30; done;
        echo "Setting kibana_system password";
        until curl -s -X POST --cacert config/certs/ca/ca.crt -u "elastic:${ELASTIC_PASSWORD}" -H "Content-Type: application/json" https://elasticsearch-standalone:9200/_security/user/kibana_system/_password -d "{\"password\":\"${KIBANA_PASSWORD}\"}" | grep -q "^{}"; do sleep 100; done;
        echo "All done!";
      '
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "[ -f config/certs/elasticsearch-standalone/elasticsearch-standalone.crt ]"
        ]
      interval: 1s
      timeout: 5s
      retries: 120

  elasticsearch-standalone:
    container_name: elasticsearch-standalone
    image: elasticsearch:${VERSION_ELASTICSEARCH}
    env_file:
      - ./elasticsearch-standalone.env
    environment:
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    mem_limit: 1073741824
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s --cacert config/certs/ca/ca.crt https://localhost:9200 | grep -q 'missing authentication credentials'"
        ]
      interval: 10s
      timeout: 10s
      retries: 120
    volumes:
      - elasticsearch-standalone-certs:/usr/share/elasticsearch/config/certs
      - elasticsearch-standalone:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    depends_on:
      elasticsearch-standalone-setup:
        condition: service_healthy

  elasticsearch-standalone-kibana:
    container_name: elasticsearch-standalone-kibana
    image: kibana:${VERSION_ELASTICSEARCH}
    env_file:
      - ./kibana.env
    environment:
      - ELASTICSEARCH_PASSWORD=${KIBANA_PASSWORD}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s -I http://localhost:5601 | grep -q 'HTTP/1.1 302 Found'"
        ]
      interval: 10s
      timeout: 10s
      retries: 120
    volumes:
      - elasticsearch-standalone-certs:/usr/share/kibana/config/certs
      - elasticsearch-standalone-kibana:/usr/share/kibana/data
    ports:
      - "5601:5601"
    depends_on:
      elasticsearch-standalone:
        condition: service_healthy

volumes:
  elasticsearch-standalone-certs:
    driver: local
  elasticsearch-standalone:
    driver: local
  elasticsearch-standalone-kibana:
    driver: local
