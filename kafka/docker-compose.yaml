version: "3.9"
name: kafka
services:
  zookeeper: 
    container_name: zookeeper
    image: zookeeper:${VERSION_ZOOKEEPER}
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOO_LOG4J_PROP=INFO,ROLLINGFILE
    ports:
      - "2181:2181"
    networks:
      - development-network
    volumes:
      - zookeeper-data:/data
      - zookeeper-datalog:/datalog
      - zookeeper-logs:/logs
  
  kafka:
    container_name: kafka
    image: bitnami/kafka:${VERSION_KAFKA}
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=INTERNAL://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka:9092,EXTERNAL://127.0.0.1:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
    ports:
      - "9092:9092"
      - "9093:9093"
    networks:
      - development-network
    volumes:
      - kafka:/bitnami/kafka
    depends_on:
      - zookeeper

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:${VERSION_KAFKA_UI}
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
    ports:
      - "8080:8080"
    networks:
      - development-network
    depends_on:
      - kafka
      - zookeeper

networks:
  development-network:
    external: true
      
volumes:
  kafka:
    name: kafka
  zookeeper-data:
    name: zookeeper-data
  zookeeper-datalog:
    name: zookeeper-datalog
  zookeeper-logs:
    name: zookeeper-logs