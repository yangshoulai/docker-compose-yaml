name: kafka-cluster
services:
  zoo1: 
    container_name: zoo1
    image: zookeeper:${VERSION_ZOOKEEPER}
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181
    ports:
      - "2181:2181"
    networks:
      - development-network
    volumes:
      - ./volumes/zookeeper/zoo1/data:/data
      - ./volumes/zookeeper/zoo1/datalog:/datalog
      - ./volumes/zookeeper/zoo1/logs:/logs

  zoo2: 
    container_name: zoo2
    image: zookeeper:${VERSION_ZOOKEEPER}
    environment:
      ZOO_MY_ID: 2
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181
    ports:
      - "2182:2181"
    networks:
      - development-network
    volumes:
      - ./volumes/zookeeper/zoo2/data:/data
      - ./volumes/zookeeper/zoo2/datalog:/datalog
      - ./volumes/zookeeper/zoo2/logs:/logs

  zoo3: 
    container_name: zoo3
    image: zookeeper:${VERSION_ZOOKEEPER}
    environment:
      ZOO_MY_ID: 3
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181
    ports:
      - "2183:2181"
    networks:
      - development-network
    volumes:
      - ./volumes/zookeeper/zoo3/data:/data
      - ./volumes/zookeeper/zoo3/datalog:/datalog
      - ./volumes/zookeeper/zoo3/logs:/logs



  kafka1:
    image: bitnami/kafka:${VERSION_KAFKA}
    container_name: kafka1
    environment:
      KAFKA_BROKER_ID: 1
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_CFG_LISTENERS: INTERNAL://:9092,EXTERNAL://:19092
      KAFKA_CFG_ADVERTISED_LISTENERS: INTERNAL://kafka1:9092,EXTERNAL://192.168.2.8:19092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_CFG_ZOOKEEPER_CONNECT: zoo1:2181,zoo2:2181,zoo3:2181
    ports:
      - 19092:19092
    networks:
      - development-network
    volumes:
      - ./volumes/kafka/kafka1:/bitnami/kafka
    depends_on:
      - zoo1
      - zoo2
      - zoo3

  kafka2:
    image: bitnami/kafka:${VERSION_KAFKA}
    container_name: kafka2
    environment:
      KAFKA_BROKER_ID: 2
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_CFG_LISTENERS: INTERNAL://:9092,EXTERNAL://:19092
      KAFKA_CFG_ADVERTISED_LISTENERS: INTERNAL://kafka2:9092,EXTERNAL://192.168.2.8:19093
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_CFG_ZOOKEEPER_CONNECT: zoo1:2181,zoo2:2181,zoo3:2181
    ports:
      - 19093:19092
    networks:
      - development-network
    volumes:
      - ./volumes/kafka/kafka2:/bitnami/kafka
    depends_on:
      - zoo1
      - zoo2
      - zoo3

  kafka3:
    image: bitnami/kafka:${VERSION_KAFKA}
    container_name: kafka3
    environment:
      KAFKA_BROKER_ID: 3
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_CFG_LISTENERS: INTERNAL://:9092,EXTERNAL://:19092
      KAFKA_CFG_ADVERTISED_LISTENERS: INTERNAL://kafka3:9092,EXTERNAL://192.168.2.8:19094
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_CFG_ZOOKEEPER_CONNECT: zoo1:2181,zoo2:2181,zoo3:2181
    ports:
      - 19094:19092
    networks:
      - development-network
    volumes:
      - ./volumes/kafka/kafka3:/bitnami/kafka
    depends_on:
      - zoo1
      - zoo2
      - zoo3

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:${VERSION_KAFKA_UI}
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka1:9092
    ports:
      - "8080:8080"
    networks:
      - development-network
    depends_on:
      - kafka1
      - kafka2
      - kafka3
      - zoo1
      - zoo2
      - zoo3

networks:
  development-network:
    external: true